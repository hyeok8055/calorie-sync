import{N as n,G as r,U as c,ab as i,O as f}from"./main-CaSg3MKk.js";const u="https://wnln.mooo.com/api",d=()=>{const a=new Date,t=a.getFullYear(),s=String(a.getMonth()+1).padStart(2,"0"),o=String(a.getDate()).padStart(2,"0");return`${t}-${s}-${o}`},h=async a=>{try{const t=await fetch(`${u}/food_info?keyword=${encodeURIComponent(a)}`);if(!t.ok)throw new Error("Network response was not ok");return await t.json()}catch(t){throw console.error("음식 영양정보 검색 실패:",t),t}},p=async a=>{try{const t=d(),s=n(r,"users",a,"foods",t),o=await c(s);if(o.exists()){const e=o.data();return{breakfast:e.breakfast?.flag||0,lunch:e.lunch?.flag||0,dinner:e.dinner?.flag||0,snack:e.snack?.flag||0}}else return{breakfast:0,lunch:0,dinner:0,snack:0}}catch(t){throw console.error("Meal flags 가져오기 실패:",t),t}},D=async(a,t,s)=>{try{const o=d(),e=n(r,"users",a,"foods",o);if((await c(e)).exists())await i(e,{[`${t}.flag`]:s,[`${t}.updatedAt`]:new Date().toISOString()});else{const l={date:o,[t]:{flag:s,foods:[],estimatedCalories:null,actualCalories:null,selectedFoods:[],updatedAt:new Date().toISOString()}};await f(e,l)}return!0}catch(o){throw console.error("Meal flag 업데이트 실패:",o),o}};export{p as g,h as s,D as u};
