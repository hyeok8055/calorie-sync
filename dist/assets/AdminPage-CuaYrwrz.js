import{r as o,n as ye,p as ge,j as t,ah as K,Q as xe,k as be,a4 as H,a8 as Q,a9 as we,az as je,F as q,G as T,J as G,ab as ke,N as Se}from"./main-CAaAWYAx.js";import{u as Fe,C as Ce,F as Ie,R as Ne,S as Te,a as ve}from"./index-DyXONpEC.js";import{F as f,s as a}from"./index-B7qNbRVu.js";import{R as v,C as J}from"./row-ZGTsWOQ9.js";import{M as P}from"./index-_Xm9U0r5.js";import{I as X}from"./index-MaixxJOI.js";import{T as j}from"./index-CgXTuWhA.js";import{B as w}from"./button-C3qT-jyL.js";import"./EllipsisOutlined-Ct4_0YAk.js";import"./Pagination-DRGpof-v.js";import"./InfoCircleFilled-BnjAL0QH.js";import"./Skeleton-CuImxf9e.js";const{Text:ze,Title:Me}=be,{Search:Be}=X,{Option:k}=K,{confirm:De}=P,Re=["eodud653923@gmail.com","youngwonhahn00@gmail.com","juhyeok0123@gmail.com","wn990123@gmail.com","garcia29845@gmail.com","yunj29845@gmail.com"],Je=()=>{const[S,z]=o.useState([]),[Y,Z]=o.useState([]),[b,ee]=o.useState(""),[te,F]=o.useState(!1),[y,C]=o.useState(null),[c]=f.useForm(),I=ye(e=>e.auth.user),M=ge(),[se,B]=o.useState(!0),[g,re]=o.useState(!1),[D,R]=o.useState("인분"),[U,V]=o.useState(!1),d=Fe({maxWidth:767});o.useEffect(()=>{(!I||!Re.includes(I.email))&&(a.error("이 페이지에 접근할 권한이 없습니다."),M("/main"))},[I,M]);const $=e=>e.calories!==null&&e.nutrients?.carbs!==null&&e.nutrients?.protein!==null&&e.nutrients?.fat!==null;o.useEffect(()=>{(async()=>{B(!0);try{const s=H(Q,"foods"),n=await we(s);if(n.exists()){const r=n.val(),i=Object.entries(r).filter(([l])=>l.includes("_")).map(([l,m])=>({key:l,...m,calories:m.calories||null,nutrients:{carbs:m.nutrients?.carbs||null,protein:m.nutrients?.protein||null,fat:m.nutrients?.fat||null}}));z(i),N(i,b,g)}}catch(s){console.error("음식 데이터 가져오기 실패:",s),a.error("음식 데이터를 불러오는데 실패했습니다.")}B(!1)})()},[]);const N=(e,s,n)=>{let r=[...e];s.trim()!==""&&(r=r.filter(i=>i.name.toLowerCase().includes(s.toLowerCase()))),n||(r=r.filter(i=>!$(i))),Z(r)};o.useEffect(()=>{N(S,b,g)},[b,g,S]);const ne=e=>{ee(e.target.value)},ie=e=>{re(e.target.checked)},A=e=>{C(e);let s="",n="인분";if(e.weight){const r=e.weight.match(/^([\d.]+)(.*)$/);r&&(s=r[1],n=r[2]||"인분")}R(n),c.setFieldsValue({calories:e.calories||null,carbs:e.nutrients?.carbs||null,protein:e.nutrients?.protein||null,fat:e.nutrients?.fat||null,weight:s}),F(!0)},E=()=>{F(!1),C(null),c.resetFields()},oe=async e=>{try{const s=H(Q,`foods/${y.key}`),n=`${e.weight}${D}`;await je(s,{calories:Number(e.calories)||null,nutrients:{carbs:Number(e.carbs)||null,protein:Number(e.protein)||null,fat:Number(e.fat)||null},weight:n});const r={...y,calories:Number(e.calories)||null,nutrients:{carbs:Number(e.carbs)||null,protein:Number(e.protein)||null,fat:Number(e.fat)||null},weight:n},i=S.map(l=>l.key===y.key?r:l);z(i),N(i,b,g),a.success("음식 정보가 업데이트되었습니다."),F(!1),C(null),c.resetFields()}catch(s){console.error("음식 정보 업데이트 실패:",s),a.error("음식 정보 업데이트에 실패했습니다.")}},ae=e=>{R(e)},le=async(e,s)=>{try{if(!$(s))return a.error("영양성분 정보가 완전하지 않습니다. 먼저 영양성분을 입력해주세요."),!1;const n=q(T,"users"),r=await G(n);let i=0,l=0;for(const m of r.docs){const L=m.id,me=q(T,`users/${L}/foods`),he=await G(me);for(const W of he.docs){const u=W.data();let _=!1;const pe=["breakfast","lunch","dinner","snacks"];for(const h of pe)if(u[h]&&u[h].foods&&Array.isArray(u[h].foods)){l+=u[h].foods.length;const O=u[h].foods.map(p=>{if(p.name===e){i++,_=!0;const x=p.portion||1,Ue=p.weight||100;return{...p,calories:s.calories*x,nutrients:{carbs:s.nutrients.carbs*x,protein:s.nutrients.protein*x,fat:s.nutrients.fat*x}}}return p});u[h].foods=O;const fe=O.reduce((p,x)=>p+(x.calories||0),0);u[h].actualCalories=fe}_&&await ke(Se(T,`users/${L}/foods`,W.id),u)}}return a.success(`총 ${l}개 중 ${i}개의 식사 기록이 업데이트되었습니다.`),!0}catch(n){return console.error("식사 기록 업데이트 실패:",n),a.error("식사 기록 업데이트에 실패했습니다."),!1}},ce=async()=>{if(!y){a.error("먼저 음식을 선택해주세요.");return}De({title:"모든 사용자 데이터 동기화",icon:t.jsx(ve,{}),content:"이 작업은 모든 사용자의 식사 기록에서 이 음식의 영양정보를 업데이트합니다. 진행하시겠습니까?",okText:"예, 진행합니다",cancelText:"취소",onOk:async()=>{V(!0);try{await le(y.name,{calories:Number(c.getFieldValue("calories"))||0,nutrients:{carbs:Number(c.getFieldValue("carbs"))||0,protein:Number(c.getFieldValue("protein"))||0,fat:Number(c.getFieldValue("fat"))||0}})&&a.success("모든 사용자의 식사 기록이 업데이트되었습니다.")}catch(e){console.error("동기화 실패:",e),a.error("동기화에 실패했습니다.")}finally{V(!1)}}})},de=[{title:"음식 이름",dataIndex:"name",key:"name",width:120,render:e=>t.jsx("div",{style:{wordBreak:"break-word",whiteSpace:"pre-line",lineHeight:"1.2em",fontSize:"13px"},children:e})},{title:"단위/중량",dataIndex:"weight",key:"weight",width:80},{title:"칼로리",dataIndex:"calories",key:"calories",width:70,render:e=>e||"-"},{title:"탄수화물",dataIndex:["nutrients","carbs"],key:"carbs",width:70,render:e=>e||"-"},{title:"단백질",dataIndex:["nutrients","protein"],key:"protein",width:70,render:e=>e||"-"},{title:"지방",dataIndex:["nutrients","fat"],key:"fat",width:70,render:e=>e||"-"},{title:"작업",key:"action",width:70,render:(e,s)=>t.jsx(w,{type:"primary",size:"small",onClick:()=>A(s),children:"편집"})}],ue=[{title:"음식",dataIndex:"name",key:"name",width:"30%",render:(e,s)=>t.jsxs("div",{children:[t.jsx("div",{style:{fontWeight:"bold",wordBreak:"break-word",whiteSpace:"pre-line",lineHeight:"1.2em",fontSize:"13px"},children:e}),t.jsx("div",{style:{fontSize:"12px",color:"#666"},children:s.weight})]})},{title:"영양성분",key:"nutrients",width:"35%",render:(e,s)=>t.jsxs("div",{style:{fontSize:"12px"},children:[t.jsxs("div",{children:["칼로리: ",s.calories||"-"]}),t.jsxs("div",{children:["탄수: ",s.nutrients?.carbs||"-"]}),t.jsxs("div",{children:["단백: ",s.nutrients?.protein||"-"]}),t.jsxs("div",{children:["지방: ",s.nutrients?.fat||"-"]})]})},{title:"편집",key:"action",width:"15%",render:(e,s)=>t.jsx(w,{type:"primary",size:"small",onClick:()=>A(s),children:"편집"})}];return t.jsxs("div",{style:{padding:d?"10px":"20px"},children:[t.jsx(v,{justify:"space-between",align:"middle",style:{marginBottom:20},children:t.jsx(Me,{level:d?3:2,style:{color:"#5FDD9D"},children:"음식 데이터 관리자 페이지"})}),t.jsxs(v,{gutter:[16,16],style:{marginBottom:20},children:[t.jsx(J,{span:d?24:16,children:t.jsx(Be,{placeholder:"음식 이름으로 검색",value:b,onChange:ne,enterButton:!0,style:{width:"100%"}})}),t.jsx(J,{span:d?24:8,children:t.jsx(Ce,{checked:g,onChange:ie,style:{marginLeft:d?0:10},children:"영양성분 작성 완료된 음식 보기"})})]}),t.jsx("div",{style:{marginBottom:10,fontSize:"14px",color:"#888"},children:g?"모든 음식을 표시하고 있습니다.":"현재 영양성분이 미완성된 음식만 표시하고 있습니다."}),t.jsx(Ie,{columns:d?ue:de,dataSource:Y,rowKey:"key",loading:se,scroll:{x:"100%"},pagination:{pageSize:d?8:15},size:"small",bordered:!0,style:{fontSize:"14px"}}),t.jsx(P,{title:"음식 영양정보 편집",visible:te,onCancel:E,footer:null,width:d?"95%":520,children:t.jsxs(f,{form:c,onFinish:oe,layout:"vertical",children:[t.jsxs(ze,{style:{display:"block",marginBottom:16},children:["음식명: ",y?.name]}),t.jsx(f.Item,{name:"weight",label:"중량/수량",rules:[{required:!0,message:"중량을 입력하세요."}],children:t.jsx(X,{addonAfter:t.jsxs(K,{value:D,onChange:ae,style:{width:70},children:[t.jsx(k,{value:"인분",children:"인분"}),t.jsx(k,{value:"g",children:"g"}),t.jsx(k,{value:"ml",children:"ml"}),t.jsx(k,{value:"개",children:"개"})]}),style:{width:"100%"}})}),t.jsx(f.Item,{name:"calories",label:"칼로리 (kcal)",rules:[{type:"number",message:"유효한 숫자를 입력하세요."}],children:t.jsx(j,{min:0,style:{width:"100%"}})}),t.jsx(f.Item,{name:"carbs",label:"탄수화물 (g)",rules:[{type:"number",message:"유효한 숫자를 입력하세요."}],children:t.jsx(j,{min:0,step:.1,precision:2,style:{width:"100%"}})}),t.jsx(f.Item,{name:"protein",label:"단백질 (g)",rules:[{type:"number",message:"유효한 숫자를 입력하세요."}],children:t.jsx(j,{min:0,step:.1,precision:2,style:{width:"100%"}})}),t.jsx(f.Item,{name:"fat",label:"지방 (g)",rules:[{type:"number",message:"유효한 숫자를 입력하세요."}],children:t.jsx(j,{min:0,step:.1,precision:2,style:{width:"100%"}})}),t.jsxs(v,{justify:"space-between",children:[t.jsx(xe,{title:"모든 사용자의 식사 기록에서 이 음식의 영양성분 정보를 업데이트합니다",children:t.jsx(w,{type:"default",icon:t.jsx(Ne,{spin:U}),onClick:ce,loading:U,children:"사용자 데이터 동기화"})}),t.jsxs(Te,{children:[t.jsx(w,{onClick:E,children:"취소"}),t.jsx(w,{type:"primary",htmlType:"submit",children:"저장"})]})]})]})})]})};export{Je as default};
